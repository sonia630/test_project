# Default Properties file for use by StdSchedulerFactory
# to create a Quartz Scheduler Instance, if a different
# properties file is not explicitly specified.
#

org.quartz.scheduler.instanceName: DefaultQuartzScheduler
org.quartz.scheduler.rmi.export: false
org.quartz.scheduler.rmi.proxy: false
org.quartz.scheduler.wrapJobExecutionInUserTransaction: false


#======================================
#  Configure ThreadPool线程池属性
#======================================
#线程池的实现类(一般使用SimpleThreadPool即可满足几乎所有用户的需求)
org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
#指定线程数,至少为1(无默认值)(一般设置为1-100直接的整数合适)
org.quartz.threadPool.threadCount: -1
#设置线程的优先级(最大为java.lang.Thread.MAX_PRIORITY 10,最小为java.lang.Thread.MIN_PRIORITY  1)
org.quartz.threadPool.threadPriority: 5
#设置SimpleThreadPool的一些属性
#设置是否为守护线程
org.quartz.threadPool.makethreadsdaemons:false
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true
org.quartz.threadPool.threadsInheritGroupofinitializingthread:fase

#线程前缀默认值是: [Scheduer Name]_worker
org,quartz.threadpool.threadnameprefix:swhJobThread
#配置全局监听(TriggerListener,jobListener)则应用程序可以接收和执行 预定的事件通知

#======================================
#Configuring a Global TriggerListener 配置全局的Trigger监听器
#MyTriggerListenerClass类必须有一个无参数的构造函数,和属性的set方法
#======================================

org.quartz.jobStore.misfireThreshold: 60000

org.quartz.jobStore.class: org.quartz.simpl.RAMJobStore

